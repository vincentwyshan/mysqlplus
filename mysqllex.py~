#coding=utf8
'''
Mysql lexer

1. Parse String not Unicode
'''

#

import ply.lex as lex

tokens = (
        # Types 
        'STRING', 'INTEGER', 'FLOAT',

        # Delimeters ( ) , . 
        'LPAREN', 'RPAREN',
        'COMMA', 'DOT', 
        'DELIMITER',

        # Assignment := = 
        'RETURNASSIGN', #'EQUAL',

        # Operators (+,-,*,/,%,<, <=, >, >=, =, !=, <>)
        'PLUS', 'MINUS', 'TIMES', 'DIVIDE', 'MOD',
        'LT', 'LTE', 'GT', 'GTE', 'EQUAL', 'NOTEQUAL', 'STDNOTEQUAL'

        # Or, And, Not, In, Between 
        'OR', 'AND', 'NOT', 'IN', 'BETWEEN',

        # Statemtn Lead word
        'SELECT', 'UPDATE', 'DELETE', 'INSERT',
        'SET', 'EXECUTE', 'PREPARE',
        'CREATE', 'ALTER', 'DROP', 'RENAME', 'TRUNCATE', #DDL
        'CALL', 'SHOW', 
        'DESCRIBE', 'EXPLAIN', 'USE', 'HELP', # Mysql Utility Statement leading
        'BEGIN',
        
        'END', 

        # My plus syntax
        'FOR',
        'IF', 'THEN', 'ELSEIF', 'ELSE', 
        'WHILE', 'DO', 
        'RETURN',

        'WHERE', 'FROM', 'AS', 'INTO', 'INFILE',
        
        # 
        #'ADD', 'CHANGE', 'MODIFY', 'PRIMARY', 'KEY',
        #'FIRST', 'AFTER', 'UNIQUE', 'FOREIGN', 'INDEX',
        #'CONSTRAINT', 'COLUMN', 'FULLTEXT', 'DEFAULT',

        # Name
        'NAME',

        )

def t_newline(t):
    r'\n+'
    t.lexer.lineno += len(t.value)

def t_COMMENT(t):
    r'/\*[\d\D]*?\*/|//.*\n|--.*\n'
    t.lexer.lineno += t.value.count('\n')

def t_STRING(t):
    r"\"([^\"]|\"\"|\\\")*\"|'([^']|''|\\')*'|`(``|[^`])*`" # '', "", ``

def t_INTEGER(t):
    r'\b[0-9]\d*\b'

def t_FLOAT(t):
    r'\b\d+\.\d+\b'

t_LPAREN = r'\('
t_RPAREN = r'\)'
t_COMMA  = r','
t_DOT    = r'\.'
t_DELIMITER = r';'

t_RETURNASSIGN = r'\:\='


t_PLUS      = r'\+'
t_MINUS     = r'\-'
t_DIVIDE    = r'\/'
t_MOD       = r'%'
t_LT        = r'\<'
t_LTE       = r'\<\='
t_GT        = r'\>'
t_GTE       = r'\>\='
t_EQUAL     = r'\='
t_NOTEQUAL  = r'!='
t_STDNOTEQUAL = r'\<\>'

def t_error(t):
    print "Illegal character '%s'" % t.value[0]
    t.lexer.skip(1)

lexer = lex.lex()

reserved = (
    'ACCESSIBLE', 'ADD', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'AS', 'ASC', 'ASENSITIVE',
    'BEFORE', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOTH', 'BY',
    'CALL', 'CASCADE', 'CASE', 'CHANGE', 'CHAR', 'CHARACTER', 'CHECK', 'COLLATE', 
    'COLUMN', 'CONDITION', 'CONSTRAINT', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS',
    'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE',
    'DATABASES', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEC', 'DECIMAL',
    'DECLARE', 'DEFAULT', 'DELAYED', 'DELETE', 'DESC', 'DESCRIBE', 'DETERMINISTIC', 'DISTINCT',
    'DISTINCTROW', 'DIV', 'DOUBLE', 'DROP', 'DUAL', 'EACH', 'ELSE', 'ELSEIF', 'ENCLOSED', 
    'ESCAPED', 'EXISTS', 'EXIT', 'EXPLAIN', 'FALSE', 'FETCH', 'FLOAT', 'FLOAT4', 'FLOAT8', 
    'FOR', 'FORCE', 'FOREIGN', 'FROM', 'FULLTEXT', 'GRANT', 'GROUP', 'HAVING', 'HIGH_PRIORITY', 
    'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IF', 'IGNORE', 'IN', 'INDEX', 'INFILE', 
    'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8',
    'INTEGER', 'INTERVAL', 'INTO', 'IS', 'ITERATE', 'JOIN', 'KEY', 'KEYS', 'KILL', 'LEADING', 
    'LEAVE', 'LEFT', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LOAD', 'LOCALTIME', 'LOCALTIMESTAMP', 
    'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER_SSL_VERIFY_SERVER_CERT',
    'MATCH', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MIDDLEINT', 'MINUTE_MICROSECOND', 'MINUTE_SECOND',
    'MOD', 'MODIFIES', 'NATURAL', 'NOT', 'NO_WRITE_TO_BINLOG', 'NULL', 'NUMERIC', 'ON', 'OPTIMIZE', 
    'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTFILE', 'PRECISION', 'PRIMARY',
    'PROCEDURE', 'PURGE', 'RANGE', 'READ', 'READS', 'READ_WRITE', 'REAL', 'REFERENCES', 'REGEXP',
    'RELEASE', 'RENAME', 'REPEAT', 'REPLACE', 'REQUIRE', 'RESTRICT', 'RETURN', 'REVOKE', 'RIGHT',
    'RLIKE', 'SCHEMA', 'SCHEMAS', 'SECOND_MICROSECOND', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SET', 
    'SHOW', 'SMALLINT', 'SPATIAL', 'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 
    'SQL_BIG_RESULT', 'SQL_CALC_FOUND_ROWS', 'SQL_SMALL_RESULT', 'SSL', 'STARTING', 'STRAIGHT_JOIN', 
    'TABLE', 'TERMINATED', 'THEN', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRIGGER', 
    'TRUE', 'UNDO', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSIGNED', 'UPDATE', 'USAGE', 'USE', 'USING', 
    'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARYING',
    'WHEN', 'WHERE', 'WHILE', 'WITH', 'WRITE', 'XOR', 'YEAR_MONTH', 'ZEROFILL')


